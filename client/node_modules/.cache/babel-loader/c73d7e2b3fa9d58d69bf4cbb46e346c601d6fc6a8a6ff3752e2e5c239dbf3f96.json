{"ast":null,"code":"import api from'../utils/api';import{setAlert}from'./alert';import{REGISTER_SUCCESS,REGISTER_FAIL,USER_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT}from'./types';// Load User\nexport const loadUser=()=>async dispatch=>{try{const res=await api.get('/auth');dispatch({type:USER_LOADED,payload:res.data});}catch(err){dispatch({type:AUTH_ERROR});}};// Register User\nexport const register=_ref=>{let{name,email,githubusername,password}=_ref;return async dispatch=>{const body={name,email,githubusername,password};try{const res=await api.post('/users',body);dispatch({type:REGISTER_SUCCESS,payload:res.data});dispatch(loadUser());}catch(err){const errors=err.response.data.errors;if(errors){errors.forEach(error=>dispatch(setAlert(error.msg,'danger')));}dispatch({type:REGISTER_FAIL});}};};// Login User\nexport const login=(email,password)=>async dispatch=>{const body={email,password};try{const res=await api.post('/auth',body);dispatch({type:LOGIN_SUCCESS,payload:res.data});dispatch(loadUser());}catch(err){const errors=err.response.data.errors;if(errors){errors.forEach(error=>dispatch(setAlert(error.msg,'danger')));}dispatch({type:LOGIN_FAIL});}};// Logout/Clear Profile\nexport const logout=()=>dispatch=>{dispatch({type:LOGOUT});};","map":{"version":3,"names":["api","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","loadUser","dispatch","res","get","type","payload","data","err","register","name","email","githubusername","password","body","post","errors","response","forEach","error","msg","login","logout"],"sources":["C:/Users/Bhanuchinne/Desktop/PROJECT-MERN/client/src/actions/auth.js"],"sourcesContent":["import api from '../utils/api';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from './types';\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n  try {\n    const res = await api.get('/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({ type: AUTH_ERROR });\n  }\n};\n\n// Register User\nexport const register =\n  ({ name, email, githubusername, password }) =>\n  async (dispatch) => {\n    const body = { name, email, githubusername, password };\n\n    try {\n      const res = await api.post('/users', body);\n\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n\n      dispatch(loadUser());\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({ type: REGISTER_FAIL });\n    }\n  };\n\n// Login User\nexport const login = (email, password) => async (dispatch) => {\n  const body = { email, password };\n\n  try {\n    const res = await api.post('/auth', body);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({ type: LOGIN_FAIL });\n  }\n};\n\n// Logout/Clear Profile\nexport const logout = () => (dispatch) => {\n  dispatch({ type: LOGOUT });\n};\n"],"mappings":"AAAA,MAAOA,IAAG,KAAM,cAAc,CAC9B,OAASC,QAAQ,KAAQ,SAAS,CAClC,OACEC,gBAAgB,CAChBC,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,aAAa,CACbC,UAAU,CACVC,MAAM,KACD,SAAS,CAEhB;AACA,MAAO,MAAMC,SAAQ,CAAG,IAAM,KAAOC,SAAQ,EAAK,CAChD,GAAI,CACF,KAAMC,IAAG,CAAG,KAAMX,IAAG,CAACY,GAAG,CAAC,OAAO,CAAC,CAElCF,QAAQ,CAAC,CACPG,IAAI,CAAET,WAAW,CACjBU,OAAO,CAAEH,GAAG,CAACI,IACf,CAAC,CAAC,CACJ,CAAE,MAAOC,GAAG,CAAE,CACZN,QAAQ,CAAC,CAAEG,IAAI,CAAER,UAAW,CAAC,CAAC,CAChC,CACF,CAAC,CAED;AACA,MAAO,MAAMY,SAAQ,CACnB,UAAC,CAAEC,IAAI,CAAEC,KAAK,CAAEC,cAAc,CAAEC,QAAS,CAAC,YAC1C,MAAOX,SAAQ,EAAK,CAClB,KAAMY,KAAI,CAAG,CAAEJ,IAAI,CAAEC,KAAK,CAAEC,cAAc,CAAEC,QAAS,CAAC,CAEtD,GAAI,CACF,KAAMV,IAAG,CAAG,KAAMX,IAAG,CAACuB,IAAI,CAAC,QAAQ,CAAED,IAAI,CAAC,CAE1CZ,QAAQ,CAAC,CACPG,IAAI,CAAEX,gBAAgB,CACtBY,OAAO,CAAEH,GAAG,CAACI,IACf,CAAC,CAAC,CAEFL,QAAQ,CAACD,QAAQ,EAAE,CAAC,CACtB,CAAE,MAAOO,GAAG,CAAE,CACZ,KAAMQ,OAAM,CAAGR,GAAG,CAACS,QAAQ,CAACV,IAAI,CAACS,MAAM,CACvC,GAAIA,MAAM,CAAE,CACVA,MAAM,CAACE,OAAO,CAAEC,KAAK,EAAKjB,QAAQ,CAACT,QAAQ,CAAC0B,KAAK,CAACC,GAAG,CAAE,QAAQ,CAAC,CAAC,CAAC,CACpE,CAEAlB,QAAQ,CAAC,CAAEG,IAAI,CAAEV,aAAc,CAAC,CAAC,CACnC,CACF,CAAC,GAEH;AACA,MAAO,MAAM0B,MAAK,CAAG,CAACV,KAAK,CAAEE,QAAQ,GAAK,KAAOX,SAAQ,EAAK,CAC5D,KAAMY,KAAI,CAAG,CAAEH,KAAK,CAAEE,QAAS,CAAC,CAEhC,GAAI,CACF,KAAMV,IAAG,CAAG,KAAMX,IAAG,CAACuB,IAAI,CAAC,OAAO,CAAED,IAAI,CAAC,CAEzCZ,QAAQ,CAAC,CACPG,IAAI,CAAEP,aAAa,CACnBQ,OAAO,CAAEH,GAAG,CAACI,IACf,CAAC,CAAC,CAEFL,QAAQ,CAACD,QAAQ,EAAE,CAAC,CACtB,CAAE,MAAOO,GAAG,CAAE,CACZ,KAAMQ,OAAM,CAAGR,GAAG,CAACS,QAAQ,CAACV,IAAI,CAACS,MAAM,CACvC,GAAIA,MAAM,CAAE,CACVA,MAAM,CAACE,OAAO,CAAEC,KAAK,EAAKjB,QAAQ,CAACT,QAAQ,CAAC0B,KAAK,CAACC,GAAG,CAAE,QAAQ,CAAC,CAAC,CAAC,CACpE,CAEAlB,QAAQ,CAAC,CAAEG,IAAI,CAAEN,UAAW,CAAC,CAAC,CAChC,CACF,CAAC,CAED;AACA,MAAO,MAAMuB,OAAM,CAAG,IAAOpB,QAAQ,EAAK,CACxCA,QAAQ,CAAC,CAAEG,IAAI,CAAEL,MAAO,CAAC,CAAC,CAC5B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}