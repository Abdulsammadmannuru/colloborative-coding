{"ast":null,"code":"import api from'../utils/api';import{setAlert}from'./alert';import{GET_POSTS,POST_ERROR,UPDATE_LIKES,DELETE_POST,ADD_POST,GET_POST,ADD_COMMENT,REMOVE_COMMENT}from'./types';// Get Posts\nexport const getPosts=()=>async dispatch=>{try{const res=await api.get('/posts');dispatch({type:GET_POSTS,payload:res.data});}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Add Like\nexport const addLike=id=>async dispatch=>{try{const res=await api.put(\"/posts/like/\".concat(id));dispatch({type:UPDATE_LIKES,payload:{id,likes:res.data}});}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Remove Like\nexport const removeLike=id=>async dispatch=>{try{const res=await api.put(\"/posts/unlike/\".concat(id));dispatch({type:UPDATE_LIKES,payload:{id,likes:res.data}});}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Delete Post\nexport const deletePost=id=>async dispatch=>{try{await api.delete(\"/posts/\".concat(id));dispatch({type:DELETE_POST,payload:id});dispatch(setAlert('Post Removed','success'));}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Add Post\nexport const addPost=formData=>async dispatch=>{try{const res=await api.post('/posts',formData);dispatch({type:ADD_POST,payload:res.data});dispatch(setAlert('Post Created','success'));}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Get Post\nexport const getPost=id=>async dispatch=>{try{const res=await api.get(\"/posts/\".concat(id));dispatch({type:GET_POST,payload:res.data});}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Add Comment\nexport const addComment=(postId,formData)=>async dispatch=>{try{const res=await api.post(\"/posts/comment/\".concat(postId),formData);dispatch({type:ADD_COMMENT,payload:res.data});dispatch(setAlert('Comment Added','success'));}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Delete Comment\nexport const deleteComment=(postId,commentId)=>async dispatch=>{try{await api.delete(\"/posts/comment/\".concat(postId,\"/\").concat(commentId));dispatch({type:REMOVE_COMMENT,payload:commentId});dispatch(setAlert('Comment Removed','success'));}catch(err){dispatch({type:POST_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};","map":{"version":3,"names":["api","setAlert","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","getPosts","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","addLike","id","put","likes","removeLike","deletePost","delete","addPost","formData","post","getPost","addComment","postId","deleteComment","commentId"],"sources":["C:/Users/Bhanuchinne/Desktop/PROJECT-MERN/client/src/actions/post.js"],"sourcesContent":["import api from '../utils/api';\nimport { setAlert } from './alert';\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from './types';\n\n// Get Posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await api.get('/posts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add Like\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await api.put(`/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data,\n      },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Remove Like\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    const res = await api.put(`/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: {\n        id,\n        likes: res.data,\n      },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete Post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.delete(`/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add Post\nexport const addPost = (formData) => async (dispatch) => {\n  try {\n    const res = await api.post('/posts', formData);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Get Post\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await api.get(`/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add Comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n  try {\n    const res = await api.post(`/posts/comment/${postId}`, formData);\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete Comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    await api.delete(`/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}