{"ast":null,"code":"import{SET_ALERT,REMOVE_ALERT}from'../actions/types';const initialState=[];const alertReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;const{type,payload}=action;switch(type){case SET_ALERT:return[...state,payload];case REMOVE_ALERT:return state.filter(alert=>alert.id!==payload);default:return state;}};export default alertReducer;","map":{"version":3,"names":["SET_ALERT","REMOVE_ALERT","initialState","alertReducer","state","action","type","payload","filter","alert","id"],"sources":["C:/Users/Bhanuchinne/Desktop/PROJECT-MERN/client/src/reducers/alert.js"],"sourcesContent":["import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nconst alertReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n};\n\nexport default alertReducer;\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,YAAY,KAAQ,kBAAkB,CAE1D,KAAMC,aAAY,CAAG,EAAE,CAEvB,KAAMC,aAAY,CAAG,UAAkC,IAAjCC,MAAK,2DAAGF,YAAY,IAAEG,OAAM,2CAChD,KAAM,CAAEC,IAAI,CAAEC,OAAQ,CAAC,CAAGF,MAAM,CAEhC,OAAQC,IAAI,EACV,IAAKN,UAAS,CACZ,MAAO,CAAC,GAAGI,KAAK,CAAEG,OAAO,CAAC,CAC5B,IAAKN,aAAY,CACf,MAAOG,MAAK,CAACI,MAAM,CAAEC,KAAK,EAAKA,KAAK,CAACC,EAAE,GAAKH,OAAO,CAAC,CACtD,QACE,MAAOH,MAAK,CAAC,CAEnB,CAAC,CAED,cAAeD,aAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}