{"ast":null,"code":"import api from'../utils/api';import{setAlert}from'./alert';import{GET_PROFILE,GET_PROFILES,GET_REPOS,NO_REPOS,PROFILE_ERROR,UPDATE_PROFILE,CLEAR_PROFILE,ACCOUNT_DELETED}from'./types';// Get Current User's Profile\nexport const getCurrentProfile=()=>async dispatch=>{try{const res=await api.get('/profile/me');dispatch({type:GET_PROFILE,payload:res.data});}catch(err){dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Get All Profiles\nexport const getProfiles=()=>async dispatch=>{dispatch({type:CLEAR_PROFILE});try{const res=await api.get('/profile');dispatch({type:GET_PROFILES,payload:res.data});}catch(err){dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Get Profile by ID\nexport const getProfileById=userId=>async dispatch=>{try{const res=await api.get(\"/profile/user/\".concat(userId));dispatch({type:GET_PROFILE,payload:res.data});}catch(err){dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Get Github Repos\nexport const getGithubRepos=username=>async dispatch=>{try{const res=await api.get(\"/profile/github/\".concat(username));dispatch({type:GET_REPOS,payload:res.data});}catch(err){dispatch({type:NO_REPOS});}};// Create or Update a Profile\nexport const createProfile=function(formData,navigate){let edit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return async dispatch=>{try{const res=await api.post('/profile',formData);dispatch({type:GET_PROFILE,payload:res.data});dispatch(setAlert(edit?'Profile Updated':'Profile Created','success'));if(!edit){navigate('/dashboard');}}catch(err){const errors=err.response.data.errors;if(errors){errors.forEach(error=>dispatch(setAlert(error.msg,'danger')));}dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};};// Add Experience\nexport const addExperience=(formData,navigate)=>async dispatch=>{try{const res=await api.put('/profile/experience',formData);dispatch({type:UPDATE_PROFILE,payload:res.data});dispatch(setAlert('Experience Added','success'));navigate('/dashboard');}catch(err){const errors=err.response.data.errors;if(errors){errors.forEach(error=>dispatch(setAlert(error.msg,'danger')));}dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Add Education\nexport const addEducation=(formData,navigate)=>async dispatch=>{try{const res=await api.put('/profile/education',formData);dispatch({type:UPDATE_PROFILE,payload:res.data});dispatch(setAlert('Education Added','success'));navigate('/dashboard');}catch(err){const errors=err.response.data.errors;if(errors){errors.forEach(error=>dispatch(setAlert(error.msg,'danger')));}dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Delete Experience\nexport const deleteExperience=id=>async dispatch=>{try{const res=await api.delete(\"/profile/experience/\".concat(id));dispatch({type:UPDATE_PROFILE,payload:res.data});dispatch(setAlert('Experience Removed','success'));}catch(err){dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Delete Education\nexport const deleteEducation=id=>async dispatch=>{try{const res=await api.delete(\"/profile/education/\".concat(id));dispatch({type:UPDATE_PROFILE,payload:res.data});dispatch(setAlert('Education Removed','success'));}catch(err){dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Delete Account & Profile\nexport const deleteAccount=()=>async dispatch=>{if(window.confirm('Are you sure? This can NOT be UNDONE!')){try{await api.delete('/profile');dispatch({type:CLEAR_PROFILE});dispatch({type:ACCOUNT_DELETED});dispatch(setAlert('Your account has been permanently deleted'));}catch(err){dispatch({type:PROFILE_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}}};","map":{"version":3,"names":["api","setAlert","GET_PROFILE","GET_PROFILES","GET_REPOS","NO_REPOS","PROFILE_ERROR","UPDATE_PROFILE","CLEAR_PROFILE","ACCOUNT_DELETED","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getProfiles","getProfileById","userId","getGithubRepos","username","createProfile","formData","navigate","edit","post","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"sources":["C:/Users/Bhanuchinne/Desktop/PROJECT-MERN/client/src/actions/profile.js"],"sourcesContent":["import api from '../utils/api';\nimport { setAlert } from './alert';\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n  NO_REPOS,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n} from './types';\n\n// Get Current User's Profile\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await api.get('/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Get All Profiles\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await api.get('/profile');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Get Profile by ID\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await api.get(`/profile/user/${userId}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Get Github Repos\nexport const getGithubRepos = (username) => async (dispatch) => {\n  try {\n    const res = await api.get(`/profile/github/${username}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({ type: NO_REPOS });\n  }\n};\n\n// Create or Update a Profile\nexport const createProfile =\n  (formData, navigate, edit = false) =>\n  async (dispatch) => {\n    try {\n      const res = await api.post('/profile', formData);\n\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data,\n      });\n\n      dispatch(\n        setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\n      );\n\n      if (!edit) {\n        navigate('/dashboard');\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status,\n        },\n      });\n    }\n  };\n\n// Add Experience\nexport const addExperience = (formData, navigate) => async (dispatch) => {\n  try {\n    const res = await api.put('/profile/experience', formData);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Experience Added', 'success'));\n\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Add Education\nexport const addEducation = (formData, navigate) => async (dispatch) => {\n  try {\n    const res = await api.put('/profile/education', formData);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Education Added', 'success'));\n\n    navigate('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete Experience\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await api.delete(`/profile/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete Education\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await api.delete(`/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status,\n      },\n    });\n  }\n};\n\n// Delete Account & Profile\nexport const deleteAccount = () => async (dispatch) => {\n  if (window.confirm('Are you sure? This can NOT be UNDONE!')) {\n    try {\n      await api.delete('/profile');\n\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n\n      dispatch(setAlert('Your account has been permanently deleted'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status,\n        },\n      });\n    }\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}